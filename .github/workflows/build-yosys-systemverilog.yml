name: Yosys with SystemVerilog Build

on:
  workflow_call:

jobs:
  yosys-systemverilog:
    name: Build yosys-systemverilog
    runs-on: ubuntu-latest
    env:
      TOOL_NAME: yosys_systemverilog
      DEBIAN_FRONTEND: "noninteractive"

    steps:
      - name: Setup repository
        uses: actions/checkout@v3

      - name: Setup Cache Metadata
        id: cache_metadata
        run: |
          cache_date=$(date +"%Y_%m_%d")
          cache_name=cache_${{ env.TOOL_NAME }}
          git_hash=$(git submodule status third_party/yosys-systemverilog | awk '{print $1}')
          echo "Cache date: "$cache_date
          echo "Cache name: "$cache_name
          echo "Yosys-systemverilog submodule git hash: "$git_hash
          echo "cache_name=$cache_name" >> "$GITHUB_ENV"
          echo "git_hash=$git_hash" >> "$GITHUB_ENV"

      - name: Setup cache
        uses: actions/cache@v3
        id: cache
        timeout-minutes: 3
        with:
          path: |
            /opt/yosys-systemverilog
          key: ${{ env.cache_name }}_${{ env.git_hash }}

      - name: Install prerequisities
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          sudo apt -qqy update && sudo apt -qqy --no-install-recommends install \
            ant \
            bison build-essential \
            cmake \
            default-jre \
            flex \
            g++-9 gcc-9 git google-perftools \
            libffi-dev libfl-dev libgoogle-perftools-dev libreadline-dev libunwind-dev \
            pkg-config python3 python3-dev python3-orderedmultidict python3-pip python3-six \
            swig \
            tcl-dev tclsh \
            uuid uuid-dev \
            wget

      - name: Build yosys-systemverilog
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          export RV_ROOT=`pwd`
          make -C tools/openroad -j `nproc` synthesis-tools
          cd third_party/yosys-systemverilog && \
          mv image /opt/yosys-systemverilog

